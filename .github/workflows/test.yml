name: Test

on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:

env:
  CACHE_PREFIX: mscore-pr-maven-

jobs:

  revision:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Tagged Version
        id: latest_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0
    outputs:
      number: '[${{ steps.latest_tag.outputs.tag }},)'

  build:
    needs: revision
    runs-on: ubuntu-latest
    steps:
    - name: Print version
      run: |
        echo "Revision: ${{ needs.revision.outputs.number }}"
    - name: Print event context
      run: |
        echo "Github context: ${{ toJson(github) }}"
    - name: Print reference type branch
      if: ${{ github.ref_type }} == 'branch'
      run: |
        echo "Event name: ${{ github.ref_type }}"
    - name: Print event name type branch
      if: github.ref_type == 'tag'
      run: |
        echo "Event name: ${{ github.event_name }}"


  set-cache-with-artifacts:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Load PR cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ env.CACHE_PREFIX }}${{ github.run_id }}
          restore-keys: |
            ${{ env.CACHE_PREFIX }}
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: mscore-artifacts
          path: ~/.m2/repository/com/devit/mscore/
      - name: Clear old cache
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: $CACHE_PREFIX
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")
      - name: Create new PR cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ env.CACHE_PREFIX }}${{ github.run_id }}
